// Copyright 2022 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

package something

import (
	"errors"
	e "github.com/hacbs-contract/ec-cli/pkg/error"
	"math/rand"
)

var (
	SO001 = e.NewError("SO001", "", e.ErrorExitStatus) // TODO: add message and set the exit status
	SO002 = e.NewError("SO002", "", e.ErrorExitStatus) // TODO: add message and set the exit status
	SO003 = e.NewError("SO003", "", e.ErrorExitStatus) // TODO: add message and set the exit status
	SO004 = e.NewError("SO004", "", e.ErrorExitStatus) // TODO: add message and set the exit status
	SO005 = e.NewError("SO005", "", e.ErrorExitStatus) // TODO: add message and set the exit status
)

func addNewErrors() error {
	switch rand.Int() {
	case 0:
		return SO001.CausedBy(errors.New("0")) // want `don't return raw error, return pkg/error.Error`
	case 1:
		return SO002.CausedBy(errors.New("1")) // want `don't return raw error, return pkg/error.Error`
	case 2:
		return SO003.CausedBy(errors.New("2")) // want `don't return raw error, return pkg/error.Error`
	case 3:
		return SO004.CausedBy(errors.New("3")) // want `don't return raw error, return pkg/error.Error`
	default:
		return SO005.CausedBy(errors.New("4")) // want `don't return raw error, return pkg/error.Error`
	}
}
